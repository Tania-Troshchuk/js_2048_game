{"version":3,"sources":["scripts/main.js"],"names":["table","score","columns","rows","canPlay","tableBody","document","querySelector","mainButton","displayScore","startMessage","winMassage","loseMessage","hasEmptyCell","x","y","getRandomNumber","number","Math","random","setNewNumber","classList","remove","foundEmptyCell","floor","newNumber","cell","getElementById","innerText","add","startGame","children","forEach","row","rowIndex","cellIndex","id","updateCell","element","value","handlerMoveCells","e","preventDefault","code","slideLeft","slideRight","slideUp","slideDown","deleteZeros","arr","filter","digit","slide","newRow","i","length","push","slidedRow","reverse","addEventListener"],"mappings":"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","file":"main.46e2a79b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet table;\nlet score = 0;\nconst columns = 4;\nconst rows = 4;\nlet canPlay = true;\n\nconst tableBody = document.querySelector('tbody');\nconst mainButton = document.querySelector('button');\nconst displayScore = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst winMassage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\ndisplayScore.innerText = score;\n\nmainButton.addEventListener('click', () => {\n  mainButton.classList.remove('start');\n  mainButton.classList.add('restart');\n  mainButton.innerText = 'Restart';\n\n  startMessage.classList.add('hidden');\n  winMassage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n\n  score = 0;\n  canPlay = true;\n\n  displayScore.innerText = score;\n\n  startGame();\n});\n\ndocument.addEventListener('keyup', handlerMoveCells);\n\nfunction hasEmptyCell() {\n  for (let x = 0; x < rows; x++) {\n    for (let y = 0; y < columns; y++) {\n      if (table[x][y] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction getRandomNumber() {\n  const number = Math.random() < 0.9\n    ? 2\n    : 4;\n\n  return number;\n}\n\nfunction setNewNumber() {\n  if (!hasEmptyCell()) {\n    loseMessage.classList.remove('hidden');\n\n    canPlay = false;\n\n    return;\n  }\n\n  let foundEmptyCell = false;\n\n  while (!foundEmptyCell) {\n    const x = Math.floor(Math.random() * rows);\n    const y = Math.floor(Math.random() * columns);\n\n    if (table[x][y] === 0) {\n      const newNumber = getRandomNumber();\n\n      table[x][y] = newNumber;\n\n      const cell = document.getElementById(`${x}-${y}`);\n\n      cell.innerText = newNumber;\n      cell.classList.add(`field-cell--${newNumber}`);\n      foundEmptyCell = true;\n    }\n  }\n}\n\nfunction startGame() {\n  table = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  [...tableBody.children].forEach((row, rowIndex) => {\n    [...row.children].forEach((cell, cellIndex) => {\n      cell.id = `${rowIndex}-${cellIndex}`;\n\n      const digit = table[rowIndex][cellIndex];\n\n      updateCell(cell, digit);\n    });\n  });\n\n  setNewNumber();\n  setNewNumber();\n}\n\nfunction updateCell(element, value) {\n  element.innerText = '';\n  element.classList.value = '';\n  element.classList.add('field-cell');\n\n  if (value > 0) {\n    element.classList.add(`field-cell--${value}`);\n    element.innerText = value;\n  }\n\n  if (value === 2048) {\n    winMassage.classList.remove('hidden');\n\n    canPlay = false;\n  }\n}\n\nfunction handlerMoveCells(e) {\n  e.preventDefault();\n\n  if (!canPlay) {\n    return;\n  }\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n      setNewNumber();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      setNewNumber();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      setNewNumber();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      setNewNumber();\n      break;\n  }\n}\n\nfunction deleteZeros(arr) {\n  return arr.filter(digit => digit !== 0);\n}\n\nfunction slide(row) {\n  let newRow = deleteZeros(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n\n      score += newRow[i];\n\n      displayScore.innerText = score;\n    }\n  }\n\n  newRow = deleteZeros(newRow);\n\n  while (newRow.length < rows) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  for (let x = 0; x < rows; x++) {\n    const row = table[x];\n    const slidedRow = slide(row);\n\n    table[x] = slidedRow;\n\n    for (let y = 0; y < columns; y++) {\n      const cell = document.getElementById(`${x}-${y}`);\n      const digit = table[x][y];\n\n      updateCell(cell, digit);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let x = 0; x < rows; x++) {\n    const row = table[x].reverse();\n    const slidedRow = slide(row);\n\n    table[x] = slidedRow.reverse();\n\n    for (let y = 0; y < columns; y++) {\n      const cell = document.getElementById(`${x}-${y}`);\n      const digit = table[x][y];\n\n      updateCell(cell, digit);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let y = 0; y < columns; y++) {\n    const row = [table[0][y], table[1][y], table[2][y], table[3][y]];\n    const slidedRow = slide(row);\n\n    for (let x = 0; x < rows; x++) {\n      table[x][y] = slidedRow[x];\n\n      const cell = document.getElementById(`${x}-${y}`);\n      const digit = table[x][y];\n\n      updateCell(cell, digit);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let y = 0; y < columns; y++) {\n    const row = [table[0][y], table[1][y], table[2][y], table[3][y]].reverse();\n    const slidedRow = slide(row).reverse();\n\n    for (let x = 0; x < rows; x++) {\n      table[x][y] = slidedRow[x];\n\n      const cell = document.getElementById(`${x}-${y}`);\n      const digit = table[x][y];\n\n      updateCell(cell, digit);\n    }\n  }\n}\n"]}